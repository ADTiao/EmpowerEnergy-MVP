{
    "general": {
      "company": {
        "instruction": "Extract the name of the company implementing the project.",
        "type": "string"
      },
      "village": {
        "instruction": "Extract the name of the village or settlement targeted by the project.",
        "type": "string"
      },
      "start": {
        "instruction": "Return the start date of the project in YYYY-MM-DD format if available.",
        "type": "string"
      },
      "longitude": {
        "instruction": "Extract the longitude coordinate of the village (use decimal format).",
        "type": "float"
      },
      "latitude": {
        "instruction": "Extract the latitude coordinate of the village (use decimal format).",
        "type": "float"
      },
      "energy_generated": {
        "instruction": "Find the total expected lifetime energy generated by the project, in kilowatt-hours (kWh).",
        "type": "int"
      }
    },
  
    "impact": {
      "carbon": {
        "instruction": "Extract the number of tons of carbon emissions avoided due to the project.",
        "type": "int"
      },
      "connections": {
        "instruction": "Extract the number of new energy connections (e.g., households, businesses) created by the project.",
        "type": "int"
      },
      "women_consideration": {
        "instruction": "Return True if the proposal explicitly mentions including women in project planning or decision-making. Otherwise, return False.",
        "type": "bool"
      },
      "track_women": {
        "instruction": "Count the number of distinct mechanisms mentioned for monitoring women's progress (e.g., education, employment tracking).",
        "type": "int"
      },
      "w_comm_prog": {
        "instruction": "Count the number of community programs or initiatives specifically designed to support women.",
        "type": "int"
      },
      "pue": {
        "instruction": "Count the number of productive use of energy (PUE) applications enabled by the project (e.g., agri-processing, refrigeration, sewing machines).",
        "type": "int"
      },
      "econ_focus": {
        "instruction": "Extract the expected increase in the number of small or medium-sized enterprises (SMEs) resulting from the project.",
        "type": "int"
      }
    },
  
    "finance": {
      "capex": {
        "instruction": "Extract the total capital expenditure (CAPEX) allocated for the project.",
        "type": "int"
      },
      "opex": {
        "instruction": "Extract the total operational expenditure (OPEX) estimated for the project's lifespan.",
        "type": "int"
      },
      "cpc": {
        "instruction": "Compute capital expenditure per connection: divide CAPEX by the number of new energy connections.",
        "type": "int"
      },
      "lev_ratio": {
        "instruction": "Extract the leverage ratio if available â€” this is the ratio of private capital to public/donor capital.",
        "type": "float"
      },
      "tariff_type": {
        "instruction": "Extract the type of tariff model used (e.g., flat, tiered, time-of-use, pay-as-you-go).",
        "type": "string"
      },
      "tariff": {
        "instruction": "If the tariff model is flat or tiered, extract the unit price charged to households per KwH. Otherwise, return null.",
        "type": "float"
      },
      "lcoe": {
        "instruction": "Compute the Levelized Cost of Energy (LCOE) as: (CAPEX + OPEX) / total energy generated (in kWh).",
        "type": "float"
      },
      "requested_funds" : {
        "instruction" : "the total requested funds from the financier",
        "type" : "int"
      }
    },
  
    "dev": {
      "per_local_tech": {
        "instruction": "Calculate the percentage of local technicians involved: number of local technicians divided by total technicians.",
        "type": "float"
      }
    },
  
    "tech": {
      "scalable": {
        "instruction": "Return True if the solution is grid-compatible or designed to scale modularly. Otherwise, return False.",
        "type": "bool"
      },
      "solution": {
        "instruction": "Specify whether the energy solution is a 'minigrid' or 'SHS' (solar home system).",
        "type": "string"
      },
      "monitering" : {
        "instruction" : "Return True if the proposal includes a smart monitering or metering system. Otherwise, return False.",
        "type" : "bool"
      },
      "backup" : {
        "instruction" : "Return True if the proposal includes a backup generation solution. Otherwise, return False.",
        "type" : "bool"
      }  
    },
  
    "timeline": {
      "duration": {
        "instruction": "Calculate the duration of the project in days by subtracting the start date from the end date.",
        "type": "int"
      }
    }
  }
  